<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item10" object-name="workflow:name=generic" id="bdb8a490-06b8-46f2-a127-409c2fb5e690" version="1.0.9" api-version="6.0.0" allowed-operations="vfe" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Map Network Resource]]></display-name>
  <position y="40.0" x="40.0"/>
  <input>
    <param name="workload" type="string"/>
    <param name="datacenter" type="string"/>
    <param name="usedFor" type="string"/>
    <param name="isOtv" type="boolean"/>
    <param name="network_address" type="string"/>
    <param name="backup_network_address" type="string"/>
    <param name="region" type="string"/>
    <param name="environment" type="string"/>
  </input>
  <output>
    <param name="dpg" type="VC:DistributedVirtualPortgroup"/>
    <param name="backup_dpg" type="VC:DistributedVirtualPortgroup"/>
    <param name="ipaddress" type="string"/>
    <param name="backup_ipaddress" type="string"/>
  </output>
  <attrib name="vds" type="VC:VmwareDistributedVirtualSwitch" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="110.0" x="740.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item5" type="task">
    <display-name><![CDATA[RetrieveDPG primary]]></display-name>
    <script encoded="false"><![CDATA[var portGroups = System.getModule("com.shuttle.utils").retrieveDistributedPortGroups(
    vds,
    usedFor.toLowerCase(),
    isOtv,
    false)

dpg = null
var numOfIps = 3    // At least 5 IPs required for safety reason
for each(var pg in portGroups){
    var portGroupName = pg.name.replace("%2f","-").replace("/","-")

    var subnet = System.getModule("com.shuttle.utils").getSubnetAddressByDPG(pg)
    if(isIgnoreSubnet(subnet)){
        continue
    }
    if(network_address === "" || subnet.indexOf(network_address) !== -1){
        if(numOfIps > 10){
            System.debug("Skipping to check number of IPs on " + subnet + ". Since we already found enoufh free IPs.")
            continue
        }
        var freeIPList = System.getModule("com.shuttle.qip").getFreeIPList(subnet)
        if(freeIPList.length > numOfIps){
            numOfIps = freeIPList.length
            ipaddress = freeIPList[0].objectAddr
            dpg = pg
        } 
    }
}
if(dpg == null){
    throw("Could not find Distributed Port Group.")
}
System.debug("Selected Distributed Port Group is: " + dpg.name)
System.debug("Selected Primary IP Address is: " + ipaddress)


function isIgnoreSubnet(subnet){
	if(subnet == "10.61.83.0/24"){
		System.warn("10.61.83.0 had been skiped because SQL Silver build need to use same IP segment. This is temporaly fix but please remove this condition if 10.61.238.0/24 does not have enough IP.")
        return true
	}else if(subnet == "10.61.239.0/24"){
		System.warn("10.61.239.0 had been skiped because SQL Silver build need to use same IP segment. This is temporaly fix but please remove this condition if 10.61.239.0/24 does not have enough IP.")
		return true
	}else if(subnet == "10.60.10.0/24"){
		System.error("10.61.10.0/24 had been skiped because There is no free IP.")
		return true
	}else if(subnet == "10.166.135.0/24"){
        System.warn("10.166.135.0/24 need to be skip since shuttle does not permission on this subnet.")
        return true
    }
    return false
}]]></script>
    <in-binding>
      <bind name="vds" type="VC:VmwareDistributedVirtualSwitch" export-name="vds"/>
      <bind name="usedFor" type="string" export-name="usedFor"/>
      <bind name="isOtv" type="boolean" export-name="isOtv"/>
      <bind name="network_address" type="string" export-name="network_address"/>
    </in-binding>
    <out-binding>
      <bind name="dpg" type="VC:DistributedVirtualPortgroup" export-name="dpg"/>
      <bind name="ipaddress" type="string" export-name="ipaddress"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="50.0" x="340.0"/>
  </workflow-item>
  <workflow-item name="item4" type="end" end-mode="0">
    <in-binding/>
    <position y="40.0" x="620.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item7" type="decision-activity" alt-out-name="item4">
    <display-name><![CDATA[isBackupRequired]]></display-name>
    <script encoded="false"><![CDATA[// Generated by the system, cannot be edited
return true;]]></script>
    <in-binding>
      <bind name="region" type="string" export-name="region"/>
      <bind name="workload" type="string" export-name="workload"/>
      <bind name="environment" type="string" export-name="environment"/>
    </in-binding>
    <out-binding/>
    <reference type="ScriptModule" id="com.shuttle.utils/isBackupRequired"/>
    <description><![CDATA[Decision activity based on a workflow or an action.]]></description>
    <position y="40.0" x="460.0"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item8" type="task">
    <display-name><![CDATA[RetrieveVDS]]></display-name>
    <script encoded="false"><![CDATA[vds = System.getModule("com.shuttle.utils").retrieveDistributedVirtualSwitch(workload, datacenter, usedFor, true)]]></script>
    <in-binding>
      <bind name="workload" type="string" export-name="workload"/>
      <bind name="datacenter" type="string" export-name="datacenter"/>
      <bind name="usedFor" type="string" export-name="usedFor"/>
    </in-binding>
    <out-binding>
      <bind name="vds" type="VC:VmwareDistributedVirtualSwitch" export-name="vds"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="120.0" x="460.0"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item0" type="task">
    <display-name><![CDATA[RetrieveDPG]]></display-name>
    <script encoded="false"><![CDATA[var portGroups = System.getModule("com.shuttle.utils").retrieveDistributedPortGroups(
    vds,
    usedFor.toLowerCase(),
    false,
    true)

backup_dpg = null
var numOfIps = 5    // At least 5 IPs required for safety reason
for each(var pg in portGroups){
    var portGroupName = pg.name.replace("%2f","-").replace("/","-")

    var subnet = System.getModule("com.shuttle.utils").getSubnetAddressByDPG(pg)
    if(isIgnoreSubnet(subnet)){
        continue
    }
    if(backup_network_address === "" || subnet.indexOf(backup_network_address) !== -1){
        if(numOfIps > 10){
            System.debug("Skipping to check number of IPs on " + subnet + ". Since we already found enoufh free IPs.")
            continue
        }
        var freeIPList = System.getModule("com.shuttle.qip").getFreeIPList(subnet)
        if(freeIPList.length > numOfIps){
            numOfIps = freeIPList.length
            backup_ipaddress = freeIPList[0].objectAddr
            backup_dpg = pg
        } 
    }
}
if(backup_dpg == null){
    throw("Could not find Distributed Port Group.")
}
System.debug("Selected Distributed Port Group is: " + backup_dpg.name)
System.debug("Selected Backup IP Address is: " + backup_ipaddress)

function isIgnoreSubnet(subnet){
    return false
}]]></script>
    <in-binding>
      <bind name="vds" type="VC:VmwareDistributedVirtualSwitch" export-name="vds"/>
      <bind name="usedFor" type="string" export-name="usedFor"/>
      <bind name="isOtv" type="boolean" export-name="isOtv"/>
      <bind name="backup_network_address" type="string" export-name="backup_network_address"/>
    </in-binding>
    <out-binding>
      <bind name="backup_dpg" type="VC:DistributedVirtualPortgroup" export-name="backup_dpg"/>
      <bind name="backup_ipaddress" type="string" export-name="backup_ipaddress"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="120.0" x="580.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item2" type="task">
    <display-name><![CDATA[RetrieveVDS primary]]></display-name>
    <script encoded="false"><![CDATA[vds = System.getModule("com.shuttle.utils").retrieveDistributedVirtualSwitch(workload, datacenter, usedFor, false)]]></script>
    <in-binding>
      <bind name="workload" type="string" export-name="workload"/>
      <bind name="datacenter" type="string" export-name="datacenter"/>
      <bind name="usedFor" type="string" export-name="usedFor"/>
    </in-binding>
    <out-binding>
      <bind name="vds" type="VC:VmwareDistributedVirtualSwitch" export-name="vds"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="50.0" x="220.0"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item9" type="task" script-module="com.shuttle.utils/logInputParameters">
    <display-name><![CDATA[logInputParameters]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
System.getModule("com.shuttle.utils").logInputParameters();
]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Add a note to the workflow schema.]]></description>
    <position y="50.0" x="100.0"/>
  </workflow-item>
  <presentation/>
</workflow>