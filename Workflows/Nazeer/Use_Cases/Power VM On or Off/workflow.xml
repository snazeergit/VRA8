<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="6af27360-4e3b-478a-99b9-443c26f5a7ca" editor-version="2.0" version="1.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Power VM On or Off</display-name>
    <position y="110.0" x="27.0"/>
    <input>
        <param name="host" type="VC:HostSystem"/>
        <param name="vm" type="VC:VirtualMachine"/>
    </input>
    <output>
        <param name="actionResult_1" type="Any"/>
    </output>
    <attrib name="powerState" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="actionResult" type="VC:Task">
        <value encoded="n"/>
    </attrib>
    <attrib name="progress" type="boolean">
        <value encoded="n">false</value>
        <description>Log progess while waiting for the task</description>
    </attrib>
    <attrib name="pollRate" type="number">
        <value encoded="n">2.0</value>
        <description>Polling rate for the task state [seconds]</description>
    </attrib>
    <attrib name="errCode" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="110.0" x="846.1111111111111"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item2" type="task" comparator="0">
        <display-name>Determine VM Power State</display-name>
        <script encoded="false">powerState=vm.state;&#13;
System.log("Power state: "+powerState)</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="powerState" type="string" export-name="powerState"/>
            <bind name="vm" type="VC:VirtualMachine"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="120.0" x="100.0"/>
    </workflow-item>
    <workflow-item name="item2" type="switch" comparator="0">
        <display-name>Switch</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
if (powerState === "poweredOn") {
  return "item5";
} else if (powerState === "poweredOff") {
  return "item6";
} else if (powerState === "suspended") {
  return "item4";
}
</script>
        <in-binding>
            <bind name="powerState" type="string" export-name="powerState"/>
            <bind name="powerState" type="string" export-name="powerState"/>
            <bind name="powerState" type="string" export-name="powerState"/>
        </in-binding>
        <out-binding/>
        <description>Basic switch activity based on a workflow attribute or parameter.</description>
        <condition name="powerState" type="string" comparator="0" label="item5">poweredOn</condition>
        <condition name="powerState" type="string" comparator="0" label="item6">poweredOff</condition>
        <condition name="powerState" type="string" comparator="0" label="item4">suspended</condition>
        <position y="120.0" x="235.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item11" throw-bind-name="" type="task" comparator="0">
        <display-name>VM Suspended</display-name>
        <script encoded="false">console.log('%cThis text is red!', 'color: red');&#13;
System.log(vm.name+" is in "+powerState+" state")&#13;
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="powerState" type="string" export-name="powerState"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="209.0" x="375.0"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item9" type="task" comparator="0">
        <display-name>Powered On</display-name>
        <script encoded="false">System.log(vm.name+" is in "+powerState+" state")</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="powerState" type="string" export-name="powerState"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="29.0" x="378.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item8" type="task" comparator="0">
        <display-name>Powered Off</display-name>
        <script encoded="false">System.log(vm.name+" is in "+powerState+" state")</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
            <bind name="powerState" type="string" export-name="powerState"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="120.0" x="375.0"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item10" catch-name="item14" throw-bind-name="errCode" type="task" script-module="com.vmware.library.vc.vm.power/startVM" comparator="0">
        <display-name>Power On VM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").startVM(vm,host);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>VM to start or resume</description>
            </bind>
            <bind name="host" type="VC:HostSystem" export-name="host">
                <description>[Optional] The host where the virtual machine is to be powered on. If no host is specified, the current associated host is used. This field must specify a host that is part of the same compute resource that the virtual machine is currently associated with. If this host is not compatible, the current host association is used. </description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="120.0" x="520.0"/>
    </workflow-item>
    <workflow-item name="item9" out-name="item10" catch-name="item13" throw-bind-name="errCode" type="task" script-module="com.vmware.library.vc.vm.power/forcePowerOff" comparator="0">
        <display-name>Power Off VM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").forcePowerOff(vm);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>VM to power off</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="29.0" x="520.0"/>
    </workflow-item>
    <workflow-item name="item10" out-name="item0" catch-name="item12" throw-bind-name="errCode" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd" comparator="0">
        <display-name>Await Task Completion</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate);
</script>
        <in-binding>
            <bind name="task" type="VC:Task" export-name="actionResult">
                <description>Task to Wait for</description>
            </bind>
            <bind name="progress" type="boolean" export-name="progress">
                <description>Log progess while waiting for the task</description>
            </bind>
            <bind name="pollRate" type="number" export-name="pollRate">
                <description>Polling rate for the task state [seconds]</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="Any" export-name="actionResult_1"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="120.0" x="675.0"/>
    </workflow-item>
    <workflow-item name="item11" out-name="item10" catch-name="item15" throw-bind-name="errCode" type="task" script-module="com.vmware.library.vc.vm.power/resetVM" comparator="0">
        <display-name>Reset VM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").resetVM(vm);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>VM to reset</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="209.0" x="520.0"/>
    </workflow-item>
    <workflow-item name="item12" throw-bind-name="errCode" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="170.0" x="715.0"/>
    </workflow-item>
    <workflow-item name="item13" throw-bind-name="errCode" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="80.0" x="560.0"/>
    </workflow-item>
    <workflow-item name="item14" throw-bind-name="errCode" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="170.0" x="560.0"/>
    </workflow-item>
    <workflow-item name="item15" throw-bind-name="errCode" type="end" end-mode="1" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="260.0" x="560.0"/>
    </workflow-item>
</ns2:workflow>
